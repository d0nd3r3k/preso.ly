{ id: 'of12BRx1nkTrfe7tDcAe',
  namespace: 
   { manager: 
	  { server: [Object],
		namespaces: [Object],
		sockets: [Circular],
		_events: [Object],
		settings: [Object],
		handshaken: [Object],
		connected: [Object],
		open: [Object],
		closed: {},
		rooms: [Object],
		roomClients: [Object],
		oldListeners: [Object],
		sequenceNumber: -535969762,
		flashPolicyServer: [Object],
		gc: [Object] },
	 name: '',
	 sockets: { of12BRx1nkTrfe7tDcAe: [Circular] },
	 auth: false,
	 flags: { endpoint: '', exceptions: [] },
	 _events: { connection: [Object] } },
  manager: 
   { server: 
	  { domain: null,
		_events: [Object],
		_maxListeners: 10,
		_connections: 2,
		connections: [Getter/Setter],
		_handle: [Object],
		_usingSlaves: false,
		_slaves: [],
		allowHalfOpen: true,
		httpAllowHalfOpen: false,
		timeout: 120000,
		_connectionKey: '4:0.0.0.0:8080',
		'@': [Function: connection] },
	 namespaces: { '': [Object] },
	 sockets: 
	  { manager: [Circular],
		name: '',
		sockets: [Object],
		auth: false,
		flags: [Object],
		_events: [Object] },
	 _events: 
	  { 'set:transports': [Object],
		'set:store': [Function],
		'set:origins': [Function],
		'set:flash policy port': [Function],
		'set:flash policy server': [Function] },
	 settings: 
	  { origins: '*:*',
		log: true,
		store: [Object],
		logger: [Object],
		static: [Object],
		heartbeats: true,
		resource: '/socket.io',
		transports: [Object],
		authorization: [Function],
		blacklist: [Object],
		'log level': 3,
		'log colors': true,
		'close timeout': 60,
		'heartbeat interval': 25,
		'heartbeat timeout': 60,
		'polling duration': 20,
		'flash policy server': true,
		'flash policy port': 10843,
		'destroy upgrade': true,
		'destroy buffer size': 100000000,
		'browser client': true,
		'browser client cache': true,
		'browser client minification': false,
		'browser client etag': false,
		'browser client expires': 315360000,
		'browser client gzip': false,
		'browser client handler': false,
		'client store expiration': 15,
		'match origin protocol': false },
	 handshaken: { of12BRx1nkTrfe7tDcAe: [Object] },
	 connected: { of12BRx1nkTrfe7tDcAe: true },
	 open: { of12BRx1nkTrfe7tDcAe: true },
	 closed: {},
	 rooms: { '': [Object] },
	 roomClients: { of12BRx1nkTrfe7tDcAe: [Object] },
	 oldListeners: [ [Object] ],
	 sequenceNumber: -535969762,
	 flashPolicyServer: 
	  { origins: [Object],
		port: 10843,
		log: [Function],
		socket: [Object],
		buffer: <Buffer 3c 3f 78 6d 6c 20 76 65 72 73 69 6f 6e 3d 22 31 2e 30 22 3f 3e 3c 21 44 4f 43 54 59 50 45 20 63 72 6f 73 73 2d 64 6f 6d 61 69 6e 2d 70 6f 6c 69 63 79 20 ...>,
		server: [Object] },
	 gc: { ontimeout: [Function] } },
  disconnected: false,
  ackPackets: 0,
  acks: {},
  flags: { endpoint: '', room: '' },
  readable: true,
  store: 
   { store: { options: undefined, clients: [Object], manager: [Object] },
	 id: 'of12BRx1nkTrfe7tDcAe',
	 data: {} },
  _events: { error: [Function] } }
Foo
{ type: 'phone', sid: 'SrKT0J9u' }
   debug - websocket writing 5:::{"name":"error","args":[{"type":"phone","sid":"SrKT0J9u"}]}
   debug - served static content /socket.io.js
   info  - transport end (socket end)
   debug - set close timeout for client of12BRx1nkTrfe7tDcAe
   debug - cleared close timeout for client of12BRx1nkTrfe7tDcAe
   debug - cleared heartbeat interval for client of12BRx1nkTrfe7tDcAe
Connection of12BRx1nkTrfe7tDcAe terminated.
   debug - discarding transport
   debug - authorized
   info  - handshake authorized iSVPHEcPqJ3Dty9jDcAf
   debug - setting request GET /socket.io/1/websocket/iSVPHEcPqJ3Dty9jDcAf
   debug - set heartbeat interval for client iSVPHEcPqJ3Dty9jDcAf
   debug - client authorized for 
   debug - websocket writing 1::
{ id: 'iSVPHEcPqJ3Dty9jDcAf',
  namespace: 
   { manager: 
	  { server: [Object],
		namespaces: [Object],
		sockets: [Circular],
		_events: [Object],
		settings: [Object],
		handshaken: [Object],
		connected: [Object],
		open: [Object],
		closed: {},
		rooms: [Object],
		roomClients: [Object],
		oldListeners: [Object],
		sequenceNumber: -535969761,
		flashPolicyServer: [Object],
		gc: [Object] },
	 name: '',
	 sockets: { iSVPHEcPqJ3Dty9jDcAf: [Circular] },
	 auth: false,
	 flags: { endpoint: '', exceptions: [] },
	 _events: { connection: [Object] } },
  manager: 
   { server: 
	  { domain: null,
		_events: [Object],
		_maxListeners: 10,
		_connections: 2,
		connections: [Getter/Setter],
		_handle: [Object],
		_usingSlaves: false,
		_slaves: [],
		allowHalfOpen: true,
		httpAllowHalfOpen: false,
		timeout: 120000,
		_connectionKey: '4:0.0.0.0:8080',
		'@': [Function: connection] },
	 namespaces: { '': [Object] },
	 sockets: 
	  { manager: [Circular],
		name: '',
		sockets: [Object],
		auth: false,
		flags: [Object],
		_events: [Object] },
	 _events: 
	  { 'set:transports': [Object],
		'set:store': [Function],
		'set:origins': [Function],
		'set:flash policy port': [Function],
		'set:flash policy server': [Function] },
	 settings: 
	  { origins: '*:*',
		log: true,
		store: [Object],
		logger: [Object],
		static: [Object],
		heartbeats: true,
		resource: '/socket.io',
		transports: [Object],
		authorization: [Function],
		blacklist: [Object],
		'log level': 3,
		'log colors': true,
		'close timeout': 60,
		'heartbeat interval': 25,
		'heartbeat timeout': 60,
		'polling duration': 20,
		'flash policy server': true,
		'flash policy port': 10843,
		'destroy upgrade': true,
		'destroy buffer size': 100000000,
		'browser client': true,
		'browser client cache': true,
		'browser client minification': false,
		'browser client etag': false,
		'browser client expires': 315360000,
		'browser client gzip': false,
		'browser client handler': false,
		'client store expiration': 15,
		'match origin protocol': false },
	 handshaken: { iSVPHEcPqJ3Dty9jDcAf: [Object] },
	 connected: { iSVPHEcPqJ3Dty9jDcAf: true },
	 open: { iSVPHEcPqJ3Dty9jDcAf: true },
	 closed: {},
	 rooms: { '': [Object] },
	 roomClients: { iSVPHEcPqJ3Dty9jDcAf: [Object] },
	 oldListeners: [ [Object] ],
	 sequenceNumber: -535969761,
	 flashPolicyServer: 
	  { origins: [Object],
		port: 10843,
		log: [Function],
		socket: [Object],
		buffer: <Buffer 3c 3f 78 6d 6c 20 76 65 72 73 69 6f 6e 3d 22 31 2e 30 22 3f 3e 3c 21 44 4f 43 54 59 50 45 20 63 72 6f 73 73 2d 64 6f 6d 61 69 6e 2d 70 6f 6c 69 63 79 20 ...>,
		server: [Object] },
	 gc: { ontimeout: [Function] } },
  disconnected: false,
  ackPackets: 0,
  acks: {},
  flags: { endpoint: '', room: '' },
  readable: true,
  store: 
   { store: { options: undefined, clients: [Object], manager: [Object] },
	 id: 'iSVPHEcPqJ3Dty9jDcAf',
	 data: {} },
  _events: { error: [Function] } }